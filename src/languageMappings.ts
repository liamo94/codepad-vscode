//https://github.com/jincheng9/markdown_supported_languages

export enum FileExtensions {
  "py" = "py",
  "js" = "js",
  "ts" = "ts",
}

export enum SupportedLanguages {
  "python" = "python",
  "javascript" = "javascript",
}

export const extensionMap = {
  py: "y",
  js: "js",
  ts: "tsx",
  jsx: "jsx",
  feature: "Cucumber",
  abap: "abap",
  adb: "ada",
  ads: "ada",
  ada: "ada",
  ahk: "ahk",
  ahkl: "ahk",
  htaccess: "apacheconf",
  ["apache.con"]: "apacheconf",
  ["apache2.conf"]: "apacheconf",
  applescript: "applescript",
  as: "as",
  as3: "as3",
  asy: "asy",
  sh: "bash",
  ksh: "bash",
  bash: "bash",
  ebuild: "bash",
  eclass: "bash",
  bat: "bat",
  cmd: "bat",
  befunge: "befunge",
  bmx: "blitzmax",
  boo: "boo",
  bf: "brainfuck",
  b: "brainfuck",
  c: "c",
  h: "c",
  cfm: "cfm",
  cfml: "cfm",
  cfc: "cfm",
  tmpl: "cheetah",
  spt: "cheetah",
  cl: "cl",
  lisp: "cl",
  el: "cl",
  clj: "clojure",
  cljs: "clojure",
  cmake: "cmake",
  ["CMakeLists.txt"]: "cmake",
  coffee: "coffeescript",
  ["sh-session"]: "console",
  control: "control",
  cpp: "cpp",
  hpp: "cpp",
  ["c++"]: "cpp",
  ["h++"]: "cpp",
  cc: "cpp",
  hh: "cpp",
  cxx: "cpp",
  hxx: "cpp",
  pde: "cpp",
  cs: "csharp",
  css: "css",
  pyx: "cython",
  pxd: "cython",
  pxi: "cython",
  d: "d",
  di: "d",
  pas: "delphi",
  diff: "diff",
  patch: "diff",
  dpatch: "dpatch",
  darcspatch: "dpatch",
  duel: "duel",
  jbst: "duel",
  dylan: "dylan",
  dyl: "dylan",
  erb: "erb",
  ["erl-sh"]: "erl",
  erl: "erlang",
  hrl: "erlang",
  evoque: "evoque",
  factor: "factor",
  flx: "felix",
  flxh: "felix",
  f: "fortran",
  f90: "fortran",
  s: "gas",
  ["S"]: "gas",
  kid: "genshi",
  vert: "glsl",
  frag: "glsl",
  geo: "glsl",
  plot: "gnuplot",
  plt: "gnuplot",
  man: "groff",
  ["(1234567)"]: "groff",
  haml: "haml",
  hs: "haskell",
  html: "html",
  htm: "html",
  xhtml: "html",
  xslt: "html",
  hx: "hx",
  hy: "hybris",
  hyb: "hybris",
  ini: "ini",
  cfg: "ini",
  io: "io",
  ik: "ioke",
  weechatlog: "irc",
  jade: "jade",
  java: "java",
  jsp: "jsp",
  ["Ihs"]: "Ihs",
  ll: "llvm",
  lgt: "logtalk",
  lua: "lua",
  wlua: "lua",
  mak: "make",
  ["Makefile"]: "make",
  makefile: "make",
  ["GNUmakefile"]: "make",
  mao: "mako",
  maql: "maql",
  mhtml: "mason",
  mc: "mason",
  mi: "mason",
  autohandler: "mason",
  dhandler: "mason",
  md: "markdown",
  mo: "modelica",
  def: "modula2",
  mod: "modula2",
  moo: "moocode",
  mu: "mupad",
  mxml: "mxml",
};

export const specialFileNames = {};

const getLanguageFromAlias = (alias: string) => {
  //Create a dict of all aliases to their language
  return "";
};
